AWSTemplateFormatVersion: '2010-09-09'

Resources:
  CloudFormationRoleDemoCICD:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: "CloudFormationRole-demo-ci-cd"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "cloudformation.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"

  CloudFormationPolicyDemoCICD:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: "CloudFormationPolicy-demo-ci-cd"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action: 
              - "lambda:CreateFunction"
              - "lambda:TagResource"
              - "iam:CreateRole"
              - "s3:CreateBucket"
              - "sns:Unsubscribe"
              - "iam:AttachRolePolicy"
              - "iam:PutRolePolicy"
              - "cloudformation:CreateChangeSet"
              - "dynamodb:DeleteTable"
              - "codedeploy:CreateDeploymentGroup"
              - "iam:DetachRolePolicy"
              - "dynamodb:DescribeTable"
              - "lambda:DeleteFunction"
              - "sns:Subscribe"
              - "apigateway:GET"
              - "lambda:GetAlias"
              - "iam:GetRole"
              - "codedeploy:RegisterApplicationRevision"
              - "sns:CreateTopic"
              - "iam:DeleteRole"
              - "dynamodb:CreateTable"
              - "s3:GetObject"
              - "s3:PutBucketNotification"
              - "lambda:UpdateFunctionCode"
              - "codedeploy:DeleteApplication"
              - "lambda:PublishVersion"
              - "apigateway:POST"
              - "iam:GetRolePolicy"
              - "lambda:CreateAlias"
              - "codedeploy:CreateApplication"
              - "iam:UntagRole"
              - "codedeploy:CreateDeployment"
              - "lambda:ListVersionsByFunction"
              - "sns:DeleteTopic"
              - "iam:TagRole"
              - "codedeploy:GetDeploymentConfig"
              - "apigateway:DELETE"
              - "iam:PassRole"
              - "sns:Publish"
              - "lambda:ListTags"
              - "iam:DeleteRolePolicy"
              - "apigateway:PATCH"
              - "s3:DeleteBucket"
              - "sns:GetTopicAttributes"
              - "apigateway:PUT"
              - "lambda:GetFunction"
              - "lambda:UpdateFunctionConfiguration"
              - "codedeploy:DeleteDeploymentGroup"
              - "lambda:AddPermission"
              - "codedeploy:GetDeployment"
              - "lambda:DeleteAlias"
              - "lambda:RemovePermission"
            Resource: '*'
      Roles:
        - Ref: CloudFormationRoleDemoCICD

  CloudFormationInstanceProfileDemoCICD: 
    Type: "AWS::IAM::InstanceProfile"
    Properties: 
      Path: "/"
      Roles: 
        - Ref: CloudFormationRoleDemoCICD
  
  CloudFormationS3DemoCICD:
    Type: 'AWS::S3::Bucket'
    Properties:
      AccessControl: Private
      BucketName: !Join
        - "-"
        - - "demo-ci-cd-sam-bucket"
          - !Select
            - 0
            - !Split
              - "-"
              - !Select
                - 2
                - !Split
                  - "/"
                  - !Ref "AWS::StackId"
  
  CloudFormationCodeCommitDemoCICD:
    Type: 'AWS::CodeCommit::Repository'
    Properties:
      RepositoryName: "demo-ci-cd-lambda-function"

Outputs:
  BucketName:
    Value: !Ref CloudFormationS3DemoCICD